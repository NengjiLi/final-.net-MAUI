using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace GymManagementSystem
{
    public class GymDbContext : DbContext
    {
        public DbSet<Member> Members { get; set; }
        public DbSet<Class> Classes { get; set; }
        // Add other DbSet properties for remaining entities

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            optionsBuilder.UseSqlServer("YourConnectionStringHere");
        }
    }

    // Define entity classes
    public class Member
    {
        public int MemberID { get; set; }
        public string Name { get; set; }
        public string ContactDetails { get; set; }
        public string MembershipType { get; set; }
        public DateTime JoinDate { get; set; }
        public DateTime LastVisitDate { get; set; }
    }

    public class Class
    {
        public int ClassID { get; set; }
        public string ClassName { get; set; }
        public string Instructor { get; set; }
        public DateTime Schedule { get; set; }
        public int Capacity { get; set; }
    }

    // Add other entity classes here
}

using System;
using System.Linq;
using Microsoft.EntityFrameworkCore;

namespace GymManagementSystem
{
    public class Program
    {
        static void Main(string[] args)
        {
            using (var context = new GymDbContext())
            {
                // Create
                var newMember = new Member
                {
                    Name = "John Doe",
                    ContactDetails = "johndoe@example.com",
                    MembershipType = "Standard",
                    JoinDate = DateTime.Now,
                    LastVisitDate = DateTime.Now
                };
                context.Members.Add(newMember);
                context.SaveChanges();

                // Read
                var member = context.Members.FirstOrDefault(m => m.MemberID == 1);
                Console.WriteLine($"Member: {member.Name}, Membership Type: {member.MembershipType}");

                // Update
                member.LastVisitDate = DateTime.Now;
                context.SaveChanges();

                // Delete
                context.Members.Remove(member);
                context.SaveChanges();
            }
        }
    }
}
var classID = 1;
var classAttendees = context.Attendance
    .Where(a => a.ClassID == classID)
    .Select(a => a.Member)
    .ToList();

foreach (var member in classAttendees)
{
    Console.WriteLine($"Class Attendee: {member.Name}");
}
